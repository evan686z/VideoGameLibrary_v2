@model IEnumerable<VideoGameLibrary_v2.Models.VideoGameReviewViewModel>

@using PagedList;
@using PagedList.Mvc

@{
    ViewBag.Title = "Video Game Review Administration";

    // cast model as a PagedList to access pagination properties
    var pagedList = (IPagedList)Model;
}

<h2>Review Management</h2>

<div class="form-group">
    <input type="button" value="Create" onclick="location.href='@Url.Action("Create", "Reviews")'" class="btn btn-success" />
</div>
@Html.PagedListPager(pagedList, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.VideoGameName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.VideoGameName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                <div class="form-group">
                    <input type="button" value="Details" class="btn btn-info" onclick="location.href='@Url.Action("Details", "Reviews", new { id = item.Id })'" />
                </div>
            </td>
        </tr>
    }

</table>
Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
<div class="form-group">
    <input type="button" value="Back" class="btn btn-primary marginTop" onclick="location.href='@Url.Action("Admin", "Home")'" />
</div>