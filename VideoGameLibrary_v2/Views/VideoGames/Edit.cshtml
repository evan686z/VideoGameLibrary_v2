@model VideoGameLibrary_v2.Models.VideoGame

{
    ViewBag.Title = "Edit Video Game";
}

<h2>Edit Video Game</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        @*YouTube Edit*@
        <div class="form-group">
            @Html.LabelFor(model => model.YouTubeEmbedLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YouTubeEmbedLink, new { htmlAttributes = new { @class = "form-control textbox-color01" } })
                @Html.ValidationMessageFor(model => model.YouTubeEmbedLink, "", new { @class = "text-danger" })
                <small class="form-text text-muted">ex: "https://www.youtube.com/embed/l_zsz_MlVvI"</small>
                <small class="form-text text-muted">You may need to remove the "?rel=0" from the embed link</small>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Back" class="btn btn-primary" onclick="location.href='@Url.Action("Details", "VideoGames", new { id = Model.Id })'" />
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
